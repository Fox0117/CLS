package ru.lumberjackcode.vacls.client.gui;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.*;

public class Annauncer {

    private JFrame window = new JFrame();

    private JPanel root;
    private JTextArea message;
    private JButton OKButton;

    public Annauncer() {
        $$$setupUI$$$();

        window.setContentPane(root);
        window.setResizable(false);
        window.pack();
        window.setTitle("Система лояльности");
        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

        createUIComponents();
    }

    private void closeWindow() {
        Annauncer.this.window.setVisible(false);
        synchronized (Annauncer.this) {
            Annauncer.this.notify();
        }
    }

    private void createUIComponents() {
        window.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                closeWindow();
            }
        });

        OKButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                closeWindow();
            }
        });
    }

    public void showMessage(String text) {
        window.setVisible(true);
        message.setText(text);
        window.pack();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new GridBagLayout());
        root.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-4473925)), "Клиент идентифицирован", TitledBorder.LEFT, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, -1, 24, root.getFont())));
        final JScrollPane scrollPane1 = new JScrollPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(10, 10, 10, 10);
        root.add(scrollPane1, gbc);
        message = new JTextArea();
        message.setColumns(80);
        message.setEditable(false);
        Font messageFont = this.$$$getFont$$$(null, -1, 14, message.getFont());
        if (messageFont != null) message.setFont(messageFont);
        message.setLineWrap(true);
        message.setName("");
        message.setRows(7);
        message.setText("");
        scrollPane1.setViewportView(message);
        OKButton = new JButton();
        OKButton.setInheritsPopupMenu(true);
        OKButton.setText("OK");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 10, 10, 10);
        root.add(OKButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }
}
